
CREATE TABLE IF NOT EXISTS USERS (
	USER_ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR(50) NOT NULL,
	LOGIN VARCHAR(50) NOT NULL,
	NAME VARCHAR(50) NOT NULL,
	BIRTHDAY DATE,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID),
	CONSTRAINT USERS_UNIQUE_EMAIL UNIQUE (EMAIL),
	CONSTRAINT USERS_UNIQUE_LOGIN UNIQUE (LOGIN)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
	USER_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	FRIEND_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FRIENDS_PK PRIMARY KEY (USER_ID, FRIEND_ID)
);



CREATE TABLE IF NOT EXISTS RATINGS (
	RATING_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	CONSTRAINT RATINGS_PK PRIMARY KEY (RATING_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	DESCRIPTION VARCHAR(200),
	RELEASE_DATE DATE,
	DURATION BIGINT,
	RATING_ID BIGINT REFERENCES RATINGS (RATING_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID)
);

CREATE TABLE IF NOT EXISTS GENRES (
	GENRE_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
	FILM_ID BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	GENRE_ID BIGINT REFERENCES GENRES (GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FILM_GENRES_PK PRIMARY KEY (FILM_ID, GENRE_ID)
);


CREATE TABLE IF NOT EXISTS LIKES (
	USER_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	FILM_ID BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT LIKES_PK PRIMARY KEY (USER_ID, FILM_ID)
);

-- add-director
CREATE TABLE IF NOT EXISTS DIRECTORS (
	DIRECTOR_ID BIGINT NOT NULL AUTO_INCREMENT,
	DIRECTOR_NAME VARCHAR(50) NOT NULL,
	CONSTRAINT RATINGS_PK PRIMARY KEY (RATING_ID)
);